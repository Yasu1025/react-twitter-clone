[{"/Users/KitasakaYasuhiro/Documents/github/react-twitter-clone/src/index.tsx":"1","/Users/KitasakaYasuhiro/Documents/github/react-twitter-clone/src/serviceWorker.ts":"2","/Users/KitasakaYasuhiro/Documents/github/react-twitter-clone/src/app/store.ts":"3","/Users/KitasakaYasuhiro/Documents/github/react-twitter-clone/src/App.tsx":"4","/Users/KitasakaYasuhiro/Documents/github/react-twitter-clone/src/features/userSlice.ts":"5"},{"size":648,"mtime":1610780309000,"results":"6","hashOfConfig":"7"},{"size":5424,"mtime":1610780309000,"results":"8","hashOfConfig":"7"},{"size":390,"mtime":1610796436000,"results":"9","hashOfConfig":"7"},{"size":169,"mtime":1610796505000,"results":"10","hashOfConfig":"7"},{"size":607,"mtime":1610796399000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ni0zi8",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/KitasakaYasuhiro/Documents/github/react-twitter-clone/src/index.tsx",[],["24","25"],"/Users/KitasakaYasuhiro/Documents/github/react-twitter-clone/src/serviceWorker.ts",[],"/Users/KitasakaYasuhiro/Documents/github/react-twitter-clone/src/app/store.ts",[],"/Users/KitasakaYasuhiro/Documents/github/react-twitter-clone/src/App.tsx",["26"],"/Users/KitasakaYasuhiro/Documents/github/react-twitter-clone/src/features/userSlice.ts",["27"],"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../app/store\";\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: { uid: \"\", photoURL: \"\", displayName: \"\" },\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = { uid: \"\", photoURL: \"\", displayName: \"\" };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state: RootState) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":2,"column":8,"nodeType":"34","messageId":"35","endLine":2,"endColumn":12},{"ruleId":"32","severity":1,"message":"36","line":1,"column":23,"nodeType":"34","messageId":"35","endLine":1,"endColumn":36},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'PayloadAction' is defined but never used.","no-global-assign","no-unsafe-negation"]